{"name":"EC for Big Learning","tagline":"Join us in fusing our EC classifiers","body":"### Big Data Learning\r\n\r\nHave you ever wanted to run your EC algorithm in the cloud? Discouraged by the complexity of EC2? We will deploy your EC algorithm on the cloud for you with our FCUBE framework!\r\n\r\nFCUBE supports a Bring Your Own Learner (BYOL) model: it deploys your EC algorithm to hundreds of machines and does all the data management for you. No scripts, no launch hassles, no tedious result collection. FCUBE is (EC) deployment as a service.\r\n\r\nFor this competition, our goal is to unite the developers of interesting EC classifier algorithms. We seek an experienced informed discussion on the various approaches and techniques without being distracted by one problem at hand. Therefore, we have set up the following format:\r\n\r\n* Everyone gets the same computational budget in Amazon EC2\r\n* Everyone works on the same datasets\r\n* Organizers select the features\r\n* You contribute a classifier learning algorithm with your own fitness function, operators and search logic\r\n* You contribute a classifier learning algorithm which accepts training data in csv format and references a Java properties file which you provide (details below), and outputs a classifier.\r\n* You contribute a classifier learning algorithm in executable format (Java, python) or as source code (must be compilable in Linux: C, C++ etc)\r\n* You contribute a piece of code which applies your classifier to test data and produces labels.\r\n* FCUBE executes your algorithm with the competition training data\r\n* FCUBE retrieves the solutions from the cloud nodes, computes the testing predictions, and returns them to you.\r\n* FCUBE also filters and fuses the predictions using different methods. Everyone receives their fused results and everyone contributes to a collaborative fused solution among all contributors.\r\n\r\n\r\nFor more detailed information yo can contact us by :\r\n[email](mailto:iarnaldo@mit.edu)\r\n\r\n\r\n\r\n<h1>\r\n<a name=\"tutorial\" class=\"anchor\" href=\"#tutorial\"><span class=\"octicon octicon-link\"></span></a>Classification\r\n by GP function: Banknote Authentication</h1>\r\n\r\n<p>We reuse the <a href=\"http://archive.ics.uci.edu/ml/datasets/banknote+authentication\">Banknote \r\n Authentication dataset</a> used above to demonstrate the GP function classifier. We report the preprocessing steps \r\n necessary to format the data:</p>\r\n \r\n<pre><code>$ sort --random-sort data_banknote_authentication.csv > banknoteShuffled.csv\r\n$ head -n905 banknoteShuffled.csv > banknoteTrain.csv\r\n$ tail -n466 banknoteShuffled.csv > banknoteTest.csv\r\n</code></pre>\r\n\r\n <p>In this example, we employ the same data to train the classifiers and to set the decisions thresholds. We run the GP\r\n function learner with the following command:</p>\r\n\r\n<pre><code>$ java -jar gpfunction.jar -train path_to_banknoteTrain -cv path_to_banknoteTrain -minutes 20\r\n</code></pre>\r\n\r\nWe now show the solutions stored in the pareto.txt file. The file contains nondominated models and their respective\r\n AUC when tested on the training set, the AUC when tested on the validation set, and the decision theshold. Note that\r\n in this case, the same data is used for training and validation and thus the same AUC values are reported.\r\n\r\n<pre><code>$ less pareto.txt\r\nX3,0.5377,0.5377,0.6\r\n(square X3),0.5893,0.5893,0.1\r\n(- X4 X1),0.8946,0.8946,0.6\r\n(- (- X4 X1) X1),0.9307,0.9307,0.6\r\n(- (sqrt (exp X4)) X1),0.9322,0.9322,0.5\r\n(- (- X4 X1) (+ X3 X2)),0.9373,0.9373,0.7\r\n(- (- (cos X3) X1) (+ X3 X2)),0.9985,0.9985,0.6\r\n(- (- (- (cube (cos (exp X3))) X1) X1) (+ X3 X2)),0.9985,0.9985,0.6\r\n(- (- (- (exp (exp (- (sin X1) (exp (- X3 X4))))) X1) (+ X3 X2)) X1),0.9996,0.9996,0.6\r\n(- (- (- (exp (- (sin X1) (exp X3))) X1) X1) (+ X3 X2)),0.9994,0.9994,0.6\r\n(- (- (- (exp (- (sin X1) (exp (- X3 X2)))) X1) X1) (+ X3 X2)),0.9995,0.9995,0.6\r\n(- (sin X4) X1),0.9179,0.9179,0.4\r\n(- (- (- (exp (exp (- (sin X1) (exp (- X3 (- (sqrt (exp X4)) X1)))))) X1) (+ X3 X2)) X1),0.9998,0.9998,0.5\r\n(- (- (- (exp (exp (- (sin X1) (exp (- X3 (- (- (- (exp X4) X1) X1) (- (- (exp (- (sin X1) (exp X3))) X1) X1))))))) X1) (+ X3 X2)) X1),1.0,1.0,0.6\r\n(- (- (- (exp (- (- (sin X1) (exp (- X3 (mydivide (sin X1) (square X3))))) (+ X3 X2))) X1) X1) (+ X3 X2)),0.9999,0.9999,0.6\r\n</code></pre>\r\n\r\n\r\nThe obtained models are then tested on unseen data:\r\n\r\n<pre><code>$ java -jar gpfunction.jar -test path_to_banknoteTest\r\n</code></pre>\r\n\r\nWe report the results for the model presenting the higher Area under the ROC curve with respect to the validation set:\r\n<pre><code>\r\nGP FUNCTION: (- (- (- (exp (exp (- (sin X1) (exp (- X3 (- (- (- (exp X4) X1) X1) (- (- (exp (- (sin X1) (exp X3))) X1) X1))))))) X1) (+ X3 X2)) X1)\r\nACCURACY: 0.9892703862660944\r\nPRECISION: 0.9731182795698925\r\nRECALL: 1.0\r\nF-SCORE: 0.9863760217983651\r\nFALSE POSITIVE RATE: 0.017543859649122806\r\nFALSE NEGATIVE RATE: 0.0\r\n</code></pre>\r\n\r\n\r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\nIf you're using the GitHub for Mac, simply sync your repository and you'll see the new branch.\r\n\r\n### Designer Templates\r\nWe've crafted some handsome templates for you to use. Go ahead and continue to layouts to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved if it remained markdown format.\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at http://help.github.com/pages or contact support@github.com and weâ€™ll help you sort it out.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}